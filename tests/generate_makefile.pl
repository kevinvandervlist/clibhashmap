#!/usr/bin/perl
# Generate the Makefile to compile and run tests.

use strict;

my $file;
my $template;
my @files;
 
# The makefile template
print '# NOTE: THIS IS GENERATED BY GENERATE_MAKEFILE.PL.' . "\n";
print '# NOTE: DO NOT MODIFY' . "\n";
print '# NOTE: UPDATE WITH ./generate_makefile.pl > Makefile' . "\n";
print '# NOTE: RUN WITH make; ./run.test' . "\n";
print '# NOTE: No output == success.' . "\n";
print 'CC=gcc' . "\n";
print 'ECHO=echo' . "\n";
print 'RM=rm -f' . "\n";
print '' . "\n";
print 'RUNTEST=run.test' . "\n";
print 'MKEXEC=chmod +x' . "\n";
print '' . "\n";
print 'CFLAGS=-Wextra -Wall -Werror -g -ggdb' . "\n";
print '' . "\n";
print 'all: build' . "\n";
print '' . "\n";
print 'clean: ' . "\n";
print '	@$(RM) *.test' . "\n";
print 'run: ' . "\n";
print '	@$(shell) ./run.test' . "\n";
print '' . "\n";
print 'prepare_ld_library_path:' . "\n";
print "\t" . '@$(ECHO) export LD_LIBRARY_PATH=../lib/ > $(RUNTEST)' . "\n";
print "\t" . '@$(MKEXEC) $(RUNTEST)' . "\n";
print '' . "\n";
print 'build: prepare_ld_library_path' . "\n";

# Print the rest of the individual target invocations.
@files = glob "$ARGV[0]*.c";
foreach $file (@files) {
		$file =~ s/(.*)\.c/\1/;
		print 'build: ' . $file . "\n";
}

print "\n";

# Print the individual targets itself
@files = glob "$ARGV[0]*.c";
foreach $file (@files) {
		my $target = $file;
		$target =~ s/(.*)\.c/\1/;
		
		print $target . ': ' . "\n";
		print "\t" . '@$(CC) ' . $file . ' -o ' . $target . '.test -L../lib -lhashmap -I../lib $(CFLAGS)' . "\n";
		print "\t" . '@$(ECHO) echo "Running ' . $target . '.test..." >> $(RUNTEST)' . "\n\n";
		print "\t" . '@$(ECHO) ./' . $target . '.test >> $(RUNTEST)' . "\n\n";
}
